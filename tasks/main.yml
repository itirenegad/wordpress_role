---
# Tasks aimed to run WordPress and MariaDB, we create alose a docker network to connect containers one another.
# First let's run conatiners with wordpress and MySQL (mariadb) images.
# All variables using here can be found in the default directory.

# Running mariadb container with ansible modules docker_conatiner.
# Notify that to enable remote host to manage containers lifecycle, we need to use a docker role with install all dependencies. 
- name: "Start MariaDB container"
  docker_container:
    name: "{{ mariadb_container_name }}"
    image: "{{ mariadb_container_name }}"
    state: "started"
    env:
      MYSQL_ROOT_PASSWORD: "{{ mariadb_root_password }}"
      MYSQL_DATABASE: "{{ mariadb_database }}"
      MYSQL_USER: "{{ mariadb_user }}"
      MYSQL_PASSWORD: "{{ mariadb_password }}"
    ports:
      - "{{ mariadb_port }}"
    volumes:
      - mariadbData:/var/lib/mariadb
      
# Running wordpress container with ansible modules docker_conatiner.
- name: "Start Wordpress container"
  docker_container:
    name: "{{ wordpress_container_name }}"
    image: "{{ wordpress_container_name }}"
    state: "started"
    env:
      WORDPRESS_DB_HOST: "mariadb_host"
      WORDPRESS_DB_USER: "{{ mariadb_user }}"
      WORDPRESS_DB_PASSWORD: "{{ mariadb_password }}"
      WORDPRESS_DB_NAME: "{{ mariadb_database }}"
    ports:
      - 80:80        
    links:
      - "{{ mariadb_container_name }}:mariadb_host"
    volumes:
      - "wordpressData:/var/www/html"

# End then let's create a docker network and added wordpress application
- name: "Create docker network"
  docker_network:
    name: "{{ wordpress_network }}"

- name: "Append Wordpress to container network"
  docker_network:
    name: "{{ wordpress_network }}"
    connected:
      - "{{ mariadb_container_name }}"
      - "{{ wordpress_container_name }}"
    appends: "yes"
